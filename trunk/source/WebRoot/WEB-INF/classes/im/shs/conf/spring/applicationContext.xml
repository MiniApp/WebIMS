<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
           http://www.springframework.org/schema/context  
           http://www.springframework.org/schema/context/spring-context-3.0.xsd  
           http://www.springframework.org/schema/aop  
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
           http://www.springframework.org/schema/tx   
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/data/jpa
           http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
	<!-- 用注解方式注入bean -->
	<context:annotation-config />
	<context:component-scan base-package="im.shs.*" />
	<!-- 数据库连接池 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/webims?createDatabaseIfNotExist=true&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull&amp;transformedBitIsBoolean=true" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>
	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="com.mysql.jdbc.Driver" /> <property 
		name="url" value="jdbc:mysql://sqld.duapp.com:4050/LFYYsawHrRdIcWfWFzRZ?createDatabaseIfNotExist=true&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull&amp;transformedBitIsBoolean=true" 
		/> <property name="username" value="IkMLolCKUujZ73wLprH8VgdC" /> <property 
		name="password" value="IyhvmSHa5CVQLDtpuOsc9Uymf0MpmNah" /> </bean> -->
	<!-- hibernate sessionFactory 创建 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>im.shs.po</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
			</props>
		</property>
	</bean>

	<!-- 配置mybitasSqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:im/shs/conf/mybatis/sql-map-config.xml"></property>
	</bean>

	<!-- 配置SqlSessionTemplate -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!-- 定义实体管理器工厂 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="jpaWeb" />
		<!-- <property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml"></property> -->
	</bean>
	<!-- 配置事务管理器 -->
	<bean id="transactionManagerJpa" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- 启用 annotation事务 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManagerJpa" /> -->
	<aop:config>
		<aop:pointcut id="crudMethos"
			expression="execution(* im.shs.service.*.*(..))" />

		<!-- 第一个*号代表可以是任意返回类型,第二个*代表包下的所有类,第三个*代表类下的所有方法,之后的(..)代表任意的参数 -->
		<aop:advisor advice-ref="txAdviceJpa" pointcut-ref="crudMethos" />
	</aop:config>
	<tx:annotation-driven transaction-manager="transactionManagerJpa" />
	<tx:advice id="txAdviceJpa" transaction-manager="transactionManagerJpa">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 配置Spring Data JPA扫描目录 -->
	<jpa:repositories base-package="im.shs.po" />

	<!-- Hibernate事物配置 -->
	<bean id="transactionManagerHi"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManagerHi">
		<tx:attributes>
			<tx:method name="find*" read-only="true" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="batch*" propagation="REQUIRED" />
			<tx:method name="*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut expression="execution(public * im.shs.service..*.*(..))"
			id="myPointcut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="myPointcut" />
	</aop:config>

	<bean id="loginAction" class="im.shs.web.action.LoginAction"></bean>
	<bean id="userAction" class="im.shs.web.action.UserAction"></bean>
</beans>