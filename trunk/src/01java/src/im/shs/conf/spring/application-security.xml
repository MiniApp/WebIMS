<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<global-method-security pre-post-annotations="enabled" />
	<!-- 该路径下的资源不用过滤 -->
	<http pattern="/js/**" security="none" />
	<http use-expressions="true" auto-config="true">

		<form-login />
		<logout />
		<!-- 实现免登陆验证 -->
		<remember-me />
		<session-management invalid-session-url="/timeout.jsp">
			<concurrency-control max-sessions="10"
				error-if-maximum-exceeded="true" />
		</session-management>
		<custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR" />
	</http>
	<!-- 自定义过滤器 --> 
    <beans:bean id="myFilter" class="im.shs.base.security.MyFilterSecurityInterceptor">
        <!-- 用户拥有的权限 -->
		<beans:property name="authenticationManager" ref="myAuthenticationManager" />
		<!-- 用户是否拥有所请求资源的权限 -->
		<beans:property name="accessDecisionManager" ref="myAccessDecisionManager" />
		<!-- 资源与权限对应关系 -->
		<beans:property name="securityMetadataSource" ref="mySecurityMetadataSource" />
    </beans:bean> 
      
    <!-- 配置认证管理器  --> 
    <authentication-manager alias="myAuthenticationManager"> 
        <authentication-provider ref="daoAuthenticationProvider" /> 
    </authentication-manager> 
      
    <beans:bean id="myUserDetailService" class="im.shs.base.security.MyUserDetailService"> 
        <beans:property name="usersDao" ref="usersDao"></beans:property> 
    </beans:bean> 
      
    <!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 --> 
    <beans:bean id="myAccessDecisionManager" class="im.shs.base.security.MyAccessDecisionManager"></beans:bean> 
      
    <!-- 资源权限关系，将所有的资源和权限对应关系建立起来，即定义某一资源可以被哪些角色去访问 --> 
    <beans:bean id="mySecurityMetadataSource" class="im.shs.base.security.MySecurityMetadataSource"> 
        <beans:constructor-arg name="resourcesDao" ref="resourcesDao"></beans:constructor-arg> 
    </beans:bean> 
      
    <beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider"> 
        <beans:property name="userDetailsService" ref="myUserDetailService" /> 
        <beans:property name="passwordEncoder" ref="passwordEncoder" /> 
        <beans:property name="saltSource" ref="saltSource" /> 
        <beans:property name="hideUserNotFoundExceptions" value="false" /> 
    </beans:bean> 
      
    <!-- md5密码验证  --> 
    <beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" /> 
    <!-- 加盐值  --> 
    <beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource"> 
        <beans:property name="userPropertyToUse" value="username" /> 
    </beans:bean> 
</beans:beans>  